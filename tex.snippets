# ===========================================================
#                 MATH MODE
# ===========================================================

snippet :m "enter inline math mode" i
\($1\)$0
endsnippet

snippet :dm "display math" i
\[$1\]$0
endsnippet

snippet :fc "fraction" i
\frac{$1}{$2}$0
endsnippet

# ------------- font mods ---------------------------------
snippet :vec "vector notation" i
\vec{$1}$0
endsnippet

snippet :bar "add bar above" i
\bar{$1}$0
endsnippet

snippet :hat "add hat to variable above" i
\hat{$1}$0
endsnippet

snippet :mbf "math bold font in math mode" i
\mathbf{$1}_{$2}^{$3}$0
endsnippet

snippet :tn "textnormal for math mode" i
\textnormal{$1}$0
endsnippet

# ---------------- greek letters --------------------
snippet :ee "epsilon" i
\epsilon
endsnippet

snippet :al "alpha" i
\alpha
endsnippet

snippet :ld "lambda" i
\lambda
endsnippet

snippet :si "sigmoid" i
\sigma
endsnippet

snippet :gm "gamma" i
\gamma
endsnippet

snippet :ta "theta" i
\theta
endsnippet

snippet _ "for maths" i
_{$1}$0
endsnippet
snippet :R "set of real numbers" i
\mathbb{R}$0
endsnippet

snippet :sl "sum limits" i
\sum\limits_{$1}^{$2}$0
endsnippet

snippet :pl "product limits" i
\prod\limits_{$1}^{$2}$0
endsnippet

snippet :bbP "double line P for probability" i
\mathbb{P}$0
endsnippet

snippet :bbE "double line E for Expectation" i
\mathbb{E}
endsnippet

snippet :bbR "double line R for set of reals" i
\mathbb{R}
endsnippet

snippet \p "partial derivative" i
\frac{\partial $1}{\partial $2}$0
endsnippet

snippet :ud "superscript and subscript" i
_{$1}^{$2}$0
endsnippet

snippet ... "ldots" iA
\ldots
endsnippet


snippet :st "for superscript form of first" i
\textsuperscript{st}$0
endsnippet

snippet :nd "for superscript form of second" i
\textsuperscript{nd}$0
endsnippet

snippet :rd "for superscript form of third" i
\textsuperscript{rd}$0
endsnippet

snippet :th "for superscript form of fourth, fifth ..." i
\textsuperscript{th}$0
endsnippet

snippet :hss "to add space at start of line" i
\hspace*{$1em}$0
endsnippet

snippet :su "superscript in text mode" i
\textsuperscript{$1}$0
endsnippet

snippet :sb "subscript in text mode" i
\textsubscript{$1}$0
endsnippet

global !p

# Define matrix size in terms of rows/columns
def mat(snip):
    rows = snip.buffer[snip.line].split('x')[0]
    cols = snip.buffer[snip.line].split('x')[1]

    int_val = lambda string: int(''.join(s for s in string if s.isdigit()))

    r = int_val(rows)
    c = int_val(cols)

    offset = c + 1
    old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]

    snip.buffer[snip.line] = ''

    final_str = old_spacing + "\\begin{matrix}\n"

    for i in range(r):
        final_str += old_spacing + '\t'
        final_str += " & ".join(['$' + str(i * c + j + offset) for j in range(c)])
        final_str += " \\\\\\\n"
    final_str += old_spacing + "\\end{matrix}\n$0"

    snip.expand_anon(final_str)

# define a m x n table
def table(snip):
	rows, cols, = snip.buffer[snip.line].split('x')

	int_val = lambda string: int(''.join(s for s in string if s.isdigit()))

	r, c = int_val(rows), int_val(cols)

	offset = c + 1
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]

	snip.buffer[snip.line] = ''

	final_str = old_spacing + "\\begin{tabular}{$1}\n\\hline\n"

	for i in range(r):
		final_str += old_spacing + '\t'
		final_str += " & ".join(['$' + str(i * c + j + offset + 1) for j in range(c)])
		final_str += " \\\\\\\n"
	final_str += old_spacing + "\\hline\n\\end{tabular}\n$0"

	snip.expand_anon(final_str)

# add a row to a table
def add_rows(snip):
	n_cols = snip.buffer[snip.line].count('&')

	left_spacing = len(snip.buffer[snip.line]) - len(snip.buffer[snip.line].lstrip())
	
	result_str = left_spacing * ' ' + ' & '.join([' $' + str(i) for i in range(1, n_cols + 1)]) + " \\\\\\\n$0"

	snip.expand_anon(result_str)	

def get_date():
	from datetime import datetime
	return datetime.today().strftime('%d %B %Y (%A)')

def get_datetime():
	from datetime import datetime
	return datetime.today().strftime('%d %B %Y (%A) %H:%M:%S %p %Z')

def get_time():
	from datetime import datetime
	return datetime.today().strftime('%H:%M:%S %p %Z')
endglobal


pre_expand "mat(snip)"
snippet "fmat(\d+)x(\d+)" "Add matrix" r
endsnippet

pre_expand "table(snip)"
snippet ":tab(\d+)x(\d+)" "Add table" r
endsnippet

pre_expand "add_rows(snip)"
snippet "row" "Add a row below" i
endsnippet

snippet => "implication" i
\Rightarrow
endsnippet

snippet :ch "chapter" i
\chapter{$1}
endsnippet

snippet :sec "section" i
\section{$1}$0
endsnippet

snippet :ssec "subsection" i
\subsection{$1}$0
endsnippet

snippet :sssec "subsubsection" i
\subsubsection{$1}$0
endsnippet

snippet :geo "change geometry of page" i
% to set custom margins
\usepackage[left = 1cm, right = 1cm, bottom = 2cm, top = 2cm]{geometry}$0
endsnippet

snippet :href "hyperref" i
% to add coloured links
\usepackage[colorlinks=true, linkcolor=blue, urlcolor=cyan]{hyperref}$0
endsnippet

snippet :xc "xcolor" i
% to be able to use colour
\usepackage[dvipsnames]{xcolor}$0
endsnippet

snippet :nosep "make it so that there is no separation in lists" i
% to have no space in all lists
\usepackage{enumitem}
\setlist[enumerate]{nosep}
\setlist[itemize]{noitemsep}
endsnippet

snippet :enum "enumeration environment" i
\begin{enumerate}
	\item $1
	\item $2
	\item $3
\end{enumerate}$0
endsnippet

snippet :begin "create environment" i
\begin{$1}
	$2
\end{$1}$0
endsnippet

snippet :x "times (product)" i
\times $0
endsnippet

snippet :poem "poem" i
\newpage
\begin{center}
	{\Large \textbf{$1} }
\end{center}
\phantomsection
\addcontentsline{toc}{chapter}{$1}
\begin{verse}
	$2
\end{verse}$0
endsnippet

snippet :tt "timetable" i
\begin{minipage}{20cm}% ===================================== $1 =====================================
\textcolor{Magenta}{\Large{\textbf{$1}}}

\begin{tabular}{| r | c | c |}
	\hline
	\textbf{Everyday Tasks} & \textbf{Time Needed} & \textbf{Status} \\\
\hline
\hline
	Brush in the morning & 00:05:00 & \xmark \\\
	Brush at night & 00:05:00 & \xmark \\\
	Bathe without taking phone inside & 00:10:00 & \xmark \\\
	Bathe using the slinky loofah & - & \xmark \\\
	Have a head bath & - & \xmark \\\
	Put clothes for washing & 00:01:00 & \xmark \\\
	Practice Flute (1) & 00:05:00 & \xmark \\\
	Practice Flue (2) & 00:05:00 & \xmark \\\
	Practice Flue (3) & 00:05:00 & \xmark \\\
	Exercise & 00:15:00 & \xmark \\\
	Update Exercise Manifest & 00:05:00 & \xmark \\\
	Go out and talk with friends & 01:30:00 &  \xmark \\\
	Get a filled bottle of water & 00:01:00 & \xmark \\\
	Finish the bottle of water & - & \xmark \\\
	Breakfast & 01:00:00 & \xmark \\\
	Lunch & 01:00:00 & \xmark \\\
	Dinner & 01:00:00 & \xmark \\\
	Wash Many bowl & 00:05:00 & \xmark \\\
	Replace Mandy Plate & 00:05:00 & \xmark \\\
	Clean Mandy Litter & 00:05:00 & \xmark \\\
	Play with Mandy & 00:15:00 & \xmark \\\
	Take medication (Depranex Half) & 00:01:00 & \xmark \\\
	Take medication (ModAlert Half) & 00:01:00 & \xmark \\\
	Update Task list at end of day & 00:10:00 & \xmark \\\
	Update Money Tracker & 00:10:00 & \xmark \\\
	Check you mail (try to do it through mutt) & 00:05:00 & \xmark \\\
	Call and talk with Nani & 00:10:00 & \xmark \\\
\hline
	\textbf{Total Time} & 06:34:00 & \\\
\hline
\end{tabular}

\vspace{2em}
\begin{tabular}{| r | c | c |}
\hline
	\textbf{Tasks for Today} & \textbf{Expected Time} & \textbf{Status} \\\
\hline
\hline
	Work on Nikumani Sir Project & 02:00:00 & \xmark \\\
	Work on Paresh Sir Project & 04:00:00 & \xmark \\\
	Sync Mother's PC & 00:05:00 & \xmark \\\
	Sync Your PC & 00:10:00 & \xmark \\\
	Call and have a talk with Sayan & 00:30:00 & \xmark \\\
	Call and have a talk with Karan & 00:30:00 & \xmark \\\
	Work on VSCode Extension & 02:00:00 & \xmark \\\
	Codeforces Questions & 01:00:00 & \xmark \\\
\hline
	\textbf{Total Time} & 14:20:00 & \\\
\hline
\end{tabular}

\vspace{2em}
\begin{tabular}{| r | r | c |}
\hline
	\textbf{Tasks for Later} & \textbf{Deadline} & \textbf{Status} \\\
\hline
\hline
	Create a VS Code Extension -- a simple one & 15 January 2022 (Sunday) & \xmark \\\
	Mandy take to Crown Vet for Blood Test & 22 January 2022 (Saturday) 10:40 AM & \xmark \\\
	Call Dadi, Phupi, Mamujan, Didi, Khala Aunty & 23 January 2022 (Sunday) & \xmark \\\
	Dev Rev -- VS Code extension creation & 31 March 2022 (Thursday) & \xmark \\\
\hline
\end{tabular}

\vspace{2em}
\begin{tabular}{| r | c | c |}
\hline
	\textbf{Person} & \textbf{Event} & \textbf{Date} \\\
\hline
\hline
	Badi Ammi & Marriage Anniversary & 8 January \\\
	Darshan Kedari & Birthday & 1 February \\\
	Faraz & Birthday & 3 February \\\
	Aditya Singhal & Birthday & 4 February \\\
	Sharanya Ranka & Birthday & 8 February \\\
	Desai Kirti Ma'am & Birthday & 9 February \\\
	Anuj Srivastava & Birthday & 2 April \\\
	Abhinav Damor & Birthday & 4 May \\\
	Sarvesh Shinde & Birthday & 6 July \\\
	Neha Chemistry Teacher & Teachers day & 5 September \\\
	Desai Kirti Ma'am & Teachers day & 5 September \\\
	Atharv Kirtikar & Birthday & 17 September \\\
	Siddarth Damor & Birthday & 12 October \\\
	Utkarsh Jha & Birthday & 1 November \\\
	Anirudh Sharma & Birthday & 8 November \\\
	Ishan Dixit & Birthday & 8 November \\\
	Khala Aunty & Marriage Anniversary & 14 November \\\
	Neha Ma'am & Birthday & 15 November \\\
	Anirudh Sood & Birthday & 19 November \\\
	Karan Doshi & Birthday & 1 December \\\
	Abbu & Birthday & 4 December \\\
\hline
\end{tabular}

\vspace{2em}
\begin{tabular}{| r | c |}
\hline
	\textbf{Personal Tasks} & \textbf{Status} \\\
\hline
\hline
	Handwriting Recognition App & \xmark \\\
	Encrypted Backup System & \xmark \\\
	Look at Liquid Neural Networkd & \xmark \\\
	GNN for object tracking using CCTV & \xmark \\\
	Graph Representation Learning by William Hamilton & \xmark \\\
	Complete the Sceduler & \xmark \\\
	Put all your poems - from book and mail - in one location & \xmark \\\
	Write a story about creating a clone of yourself & \xmark \\\
	Write a story about being able to edit everything like on a PC & \xmark \\\
	Think about creating youtube video about DSDNet and V2VNet with 3B1B style & \xmark \\\
	Add word meanings to Godan by Munshi Premchand & \xmark \\\
	Read the paper Gradient Descent is not all you need & \xmark \\\
	Read Understanding Machine Learning by Shalev-Shwartz & \xmark \\\
	Write the story about Lord Nedran & \xmark \\\
	Go through Leandro von Werra article on HuggingFace: Training Code Parrot from scratch & \xmark \\\
	Maybe look at the paper Self Attention does not need \(O(n^2)\) memory by Rabe and Staats & \xmark \\\
	Maybe look at deriving convolution from first principles by Michel Bronstein & \xmark \\\
	Practice Competitive Coding in C++ to keep wits sharp & \xmark \\\
	Finish reading Good Omens book & \xmark \\\
	Write a poem & \xmark \\\
	Go through Sutton and Barto book and other books of relevance & \xmark \\\
\hline
\end{tabular}

\vspace{2em}
\begin{tabular}{| r | c |}
\hline
	\textbf{Tasks for Arch Setup} & \textbf{Status} \\\
\hline
\hline
	Set up neomutt & \xmark \\\
	Set up Newsboat & \xmark \\\
	Configure Lightdm & \xmark \\\
	fzf directory ignore & \xmark \\\
\hline
\end{tabular}

\vspace{2em}
\begin{tabular}{| r | c |}
\hline
	\textbf{Nikumani Sir Project} & \textbf{Status} \\\
\hline
	Read the paper about Variational AutoEncoders & \xmark \\\
	Read and understand the Variational Image Compression with a scale hyperprior & \xmark \\\
	Understand the GNN from the V2VNet Paper & \xmark \\\
	Find the 3 remaining channels in the HD binary Map & \xmark \\\
	Find out how to convert LiDAR to BEV & \xmark \\\
	Understand Sum-Product Message Passing & \xmark \\\
	Implement the LiDAR based RL vehicle (using DQN) in Carla & \xmark \\\
	Find ways to improve the learning rate of RL algorithms & \xmark \\\
	Convert the whole set up combining DSDNet and V2VNet into a single RL based algorithm & \xmark \\\
	Implement the RL based algorithm & \xmark \\\
\hline
\end{tabular}

\vspace{2em}
\begin{tabular}{| r | c |}
\hline
	\textbf{Paresh Sir Project} & \textbf{Status} \\\
\hline
\hline
	Thoroughly read the paper: Neural Adaptive Video Streaming with Pensieve & \xmark \\\
	Make notes on the paper: Neural Adaptive Video Streaming with Pensieve & \xmark \\\
	Clarify any doubts you have on the paper: Neural Adaptive Video Streaming with Pensieve & \xmark \\\
	Go through the code for Pensieve on Github & \xmark \\\
	Clarify any doubts on the code on Pensieve on Github & \xmark \\\
	Set up the Pensieve Code from Github on your local machine & \xmark \\\
	Run it & \xmark \\\
\hline
\end{tabular}

\vspace{2em}
\begin{tabular}{| r | c |}
\hline
	\textbf{BITS} & \textbf{Status} \\\
\hline
\hline
	Complete the implementation of CARLA & \xmark \\\
	Work on Paresh Sir Project -- Pensieve & \xmark \\\
\hline
\end{tabular}

\vspace{2em}
\noindent \textcolor{red}{\textbf{DEADLINE: 15 JAN 20222}} \\\
\begin{tabular}{| r | c |}
\hline
	\textbf{May-July Research Internship} & \textbf{Status} \\\
\hline
\hline
	Finish Paresh Sir task & \xmark \\\
	Find out all scholarships from Europe & \xmark \\\
	Get list of universities and professors & \xmark \\\
	Complete all relevant Github projects & \xmark \\\
	Create Github profile and google sites profile & \xmark \\\
	Create mails to profs & \xmark \\\
	Send the mails & \xmark \\\
\hline
\end{tabular}
\end{minipage}
endsnippet

snippet :frm "beamer frames" i
\begin{frame}
	\frametitle{$1}
	$2
\end{frame}
$0
endsnippet

snippet :mc "caligraphic math" i
\mathcal{$1}$0
endsnippet

snippet :to "rightarrow math" i
\rightarrow
endsnippet

snippet :from "leftarrow math" i
\leftarrow
endsnippet

snippet :up "usepackage without options" i
\usepackage{$1}$0
endsnippet

snippet :upo "usepackage with options" i
\usepackage[$1]{$2}$0
endsnippet

snippet :v "verbatim" i
\verb$$1$$0
endsnippet

snippet :dt "today's date" i
`!p snip.rv = get_date()`
endsnippet

snippet :tmdt "time and date at given instant" i
`!p snip.rv = get_datetime()`
endsnippet

snippet :tm "get time at the given instant" i
`!p snip.rv = get_time()`
endsnippet

snippet :ig "include graphics" i
\includegraphics[width=$1\textwidth]{$2}$0
endsnippet

snippet :ni	"no indent" i
\noindent $0
endsnippet

snippet :vs "vertical space 2em" i
\vspace{2em}$0
endsnippet

snippet :vsb "vertical space of one line" i
\vspace{\baselineskip}
endsnippet

snippet :vocab "vocabulary practice template" i
\begin{frame}
	\frametitle{$1}
	\begin{columns}
		\column{0.5\textwidth}
			\pause
			\textbf{Meaning:} $2 \\\ \pause
			\textbf{Sample Sentences:} 
				\begin{itemize}
					\item $3 \pause
				\end{itemize}
			\textbf{Usage:} $4 \\\ \pause
			\textbf{Connotation:} $5 \\\ \pause

		\column{0.5\textwidth}
		\begin{figure}
			\includegraphics[width=$6\textwidth, height=$7\textheight]{$8}
			\caption{$9}
		\end{figure}
	\end{columns}
\end{frame}$0
endsnippet

snippet :it "item" i
\item $0
endsnippet

snippet :bf "boldface" i
\textbf{$1}$0
endsnippet

snippet :dcl "document class" i
\documentclass{$1}$0
endsnippet

snippet :au "author" i
\author{Danish Mohammad}$0
endsnippet

snippet :ita "italics" i
\textit{$1}$0
endsnippet

# ======================================================
#                  TEXT COLORS
# ======================================================
snippet :tcC "text color Cyan" i
\textcolor{Cyan}{$1}$0
endsnippet

snippet :tco "text color orange" i
\textcolor{orange}{$1}$0
endsnippet

snippet :tcO "text color Orchid" i
\textcolor{Orchid}{$1}$0
endsnippet

snippet :tcr "text color red" i
\textcolor{red}{$1}$0
endsnippet

snippet :tcb "text color blue" i
\textcolor{blue}{$1}$0
endsnippet

snippet :tcg "text color green" i
\textcolor{green}{$1}$0
endsnippet

snippet :tcy "text color yellow" i
\textcolor{yellow}{$1}$0
endsnippet









